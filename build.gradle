plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

group = 'com.lap.hacom'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

//configurations.all {
//	resolutionStrategy.failOnVersionConflict()
//}



configurations {

	all {
		resolutionStrategy {
			failOnVersionConflict()
		}
	}

	all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'

	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springGrpcVersion', "0.8.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'io.grpc:grpc-services'
	//implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
	implementation 'com.typesafe.akka:akka-actor_2.13:2.8.5'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'com.cloudhopper:ch-smpp:6.0.0-netty4-beta-2'
	implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	//implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.grpc:spring-grpc-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	constraints {

		implementation("org.scala-lang:scala-library:2.13.11") {
			force = true
			because  ""
		}
		implementation("com.google.errorprone:error_prone_annotations:2.30.0") {
			force = true
			because ""
		}

		implementation("com.google.j2objc:j2objc-annotations:3.0.0") {
			force = true
			because ""
		}

		implementation("com.google.guava:guava:33.3.1-jre") {
			force = true
			because ""
		}


	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
	}
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option 'jakarta_omit'
				option '@generated=omit'
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
